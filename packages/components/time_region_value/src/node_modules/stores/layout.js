import * as _ from 'lamb';
import {derived, writable} from 'svelte/store';
import {linearScale} from 'yootils';
import {screen} from '@svizzle/ui/src/gauges/screen/ScreenGauge.svelte';

import {yearExtentStore} from './data';

/* responsive */

export const isSmallScreen = derived(screen, $screen =>
	$screen && ($screen.sizeFlags.small && !$screen.sizeFlags.medium)
);
export const screenClasses = derived(screen, s => s?.classes);

/* safety */

const smallSafety = {left: 40, right: 40};
const largeSafety = {left: 120, right: 80};
export const safetyStore = derived(
	isSmallScreen,
	isSmall => isSmall ? smallSafety : largeSafety
);

/* timeline */

export const timelineHeightStore = writable(0);
export const timelineWidthStore = writable(0);

export const timelineLayoutStore = derived([
	safetyStore,
	timelineHeightStore,
	timelineWidthStore,
	yearExtentStore,
], ([safety, height, width, yearExtent]) => {
	const padding = 10;
	const fontSize = Math.min(height / 4, 14);
	const radius = Math.min(height / 8, 7);
	const fullExtent = [
		padding + radius,
		width - padding - radius
	];
	const fullScaleX = linearScale(yearExtent, fullExtent);
	const start = fullExtent[0] + safety.left;
	const end = fullExtent[1] - safety.right;
	const scaleX = linearScale(yearExtent, [start, end]);
	const step = scaleX(start + 1) - scaleX(start);
	const doShortenYears = step < 3 * fontSize;
	const y1 = height / 3;
	const y2 = (height + y1 + radius) / 2;
	const ym = height / 2;

	return {
		doShortenYears,
		end,
		fontSize,
		fullScaleX,
		height,
		radius,
		scaleX,
		start,
		width,
		y1,
		y2,
		ym,
	}
});
